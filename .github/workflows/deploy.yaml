name: koo-client-ci-cd

on: push

env:
  CACHED_DEPENDENCY_PATH: ${{ github.workspace }}/node_modules
  CACHED_BUILD_PATH: ${{ github.workspace }}/dist
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  job_install_dependencies:
    name: Intsall dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Compute dependencies hash key
        id: compute_lockfile_hash
        run: echo "::set-output name=key::${{ hashFiles('**/yarn.lock') }}"
      
      - name: Restore dependencies
        id: restore_dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATH }}
          key: dependencies-${{ steps.compute_lockfile_hash.outputs.key }}
          restore-keys: |
            dependencies

      - name: Install Dependencies
        if: steps.restore_dependencies.outputs.cache-hit == 'false'
        run: yarn

    outputs:
      dependencies_cache_key: dependencies-${{ steps.compute_lockfile_hash.outputs.key }}

  job_lint:
    name: Lint
    needs: job_install_dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATH }}
          key: ${{ needs.job_install_dependencies.outputs.dependencies_cache_key }}

      - name: Lint
        run: |
          yarn lint
          echo ${{ env.CACHED_BUILD_PATH }}
      
  job_build:
    name: Build
    needs: job_install_dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATH }}
          key: ${{ needs.job_install_dependencies.outputs.dependencies_cache_key }}

      - name: Restore bundle
        id: restore_bundle
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_BUILD_PATH }}
          key: build-${{ env.BUILD_CACHE_KEY }}
          restore-keys: |
            build

      - name: Build DEV bundle
        if: steps.restore_bundle.outputs.cache-hit == 'false' && github.ref != 'refs/heads/main'
        run: |
          cat << EOF >> .env
          ${{ secrets.ENV_DEV }}
          EOF
          NODE_ENV=production yarn build

      - name: Build STG bundle
        if: steps.restore_bundle.outputs.cache-hit == 'false' && github.ref == 'refs/heads/main'
        run: |
          cat << EOF >> .env
          ${{ secrets.ENV_STG }}
          EOF
          NODE_ENV=production yarn build

      - name: Build PRD bundle
        if: steps.restore_bundle.outputs.cache-hit == 'false' && github.ref_type == 'tag'
        run: |
          cat << EOF >> .env
          ${{ secrets.ENV_PRD }}
          EOF
          NODE_ENV=production yarn build

  job_deploy:
    name: Deploy
    needs: [job_lint, job_build]
    runs-on: ubuntu-latest
    services:
      minio_client:
        image: minio/mc

    env:
      MINIO_URL: ${{ secrets.MINIO_URL }}
      MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}

    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Check bundle cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_BUILD_PATH }}
          key: build-${{ env.BUILD_CACHE_KEY }}

      - name: Setup minio client
        run: |
          docker run -itd --name minio_client -v "$(pwd)"/dist:/dist --entrypoint=/bin/sh minio/mc
          docker exec minio_client mc alias set koo $MINIO_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
          
      - name: Deploy to dev
        if: github.ref != 'refs/heads/main'
        run: |
          docker exec minio_client mc cp -r dist/ koo/dev

      - name: Deploy to stg
        if: github.ref == 'refs/heads/main'
        run: |
          docker exec minio_client mc cp -r dist/ koo/stg

      - name: Deploy to prd 
        if: github.ref_type == 'tag'
        run: |
          docker exec minio_client mc cp -r dist/ koo/prd

